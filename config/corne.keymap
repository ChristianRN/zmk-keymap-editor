/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        Tapdance: Tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            bindings = <&kt>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp F           &kp P  &kp B                   &kp J          &kp L  &kp U      &kp Y    &kp SEMICOLON  &none
&none  &kp A  &kp R  &kp S           &kp T  &kp G                   &kp M          &kp N  &kp E      &kp I    &kp O          &none
&none  &kp Z  &kp X  &kp C           &kp D  &kp V                   &kp K          &kp H  &kp COMMA  &kp DOT  &kp FSLH       &none
                     &lt 3 LEFT_WIN  &to 2  &mt LEFT_SHIFT SPACE    &kp BACKSPACE  &to 1  &kp ENTER
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1        &kp N2  &kp N3    &kp N4   &kp N5           &none    &none           &kp UP_ARROW    &none      &none   &none
&none  &kp NUMBER_6  &kp N7  &kp N8    &kp N9   &kp N0           &none    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans  &none
&none  &none         &none   &none     &kp TAB  &kp BACKSPACE    &trans   &trans          &trans          &trans     &trans  &none
                             &kp LGUI  &to 2    &kp SPACE        &kp RET  &to 0           &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT        &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &none
&none  &trans    &trans  &trans    &trans    &trans           &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &none
&none  &trans    &trans  &trans    &trans    &kp BACKSPACE    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &none
                         &kp LGUI  &trans    &kp SPACE        &kp RET    &to 0      &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&none  &trans          &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &none
&none  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &none
&none  &bt BT_CLR_ALL  &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &none
                                     &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
